{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mrR\\\\Documents\\\\GitHub\\\\ticket_app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport \"./App.css\";\nimport Login from \"./compon/Login\";\nimport Posts from \"./compon/Posts\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport SignUp from \"./compon/SignUp\";\nimport { LoginContext } from \"./compon/LoginContexts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [token, setToken] = useState(false);\n  const [login, setLogin] = useContext(LoginContext);\n  const [password, setPassword] = useState(\"\");\n\n  function updatePassword(props, event) {\n    event.stopPropagation();\n    setPassword(event.target.value);\n  }\n\n  function LoginFunc(props, event) {\n    event.stopPropagation();\n    const removeWhiteSpaces = password.split(' ').join('');\n    const lowerCasePassword = removeWhiteSpaces.toLowerCase();\n\n    if (lowerCasePassword === \"test1234\") {\n      setToken(true);\n    } else alert(\"wrong password\");\n  }\n\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(LoginContext.Provider, {\n          value: {\n            login,\n            setLogin\n          },\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Login, {\n              className: \"input\",\n              value: password,\n              onClick: LoginFunc,\n              onChange: updatePassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/signup\",\n            element: /*#__PURE__*/_jsxDEV(SignUp, {\n              className: \"signUp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Posts, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(App, \"Ed5AYIyzURIx4oPWsv3xVLmsAF4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/mrR/Documents/GitHub/ticket_app/src/App.js"],"names":["React","useContext","Login","Posts","BrowserRouter","Route","Routes","useState","SignUp","LoginContext","App","token","setToken","login","setLogin","password","setPassword","updatePassword","props","event","stopPropagation","target","value","LoginFunc","removeWhiteSpaces","split","join","lowerCasePassword","toLowerCase","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,aAAT,EAAwBC,KAAxB,EAA+BC,MAA/B,QAA6C,kBAA7C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACQ,YAAD,CAApC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASU,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsC;AACpCA,IAAAA,KAAK,CAACC,eAAN;AACAJ,IAAAA,WAAW,CAACG,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAX;AACD;;AACD,WAASC,SAAT,CAAmBL,KAAnB,EAA0BC,KAA1B,EAAiC;AAC/BA,IAAAA,KAAK,CAACC,eAAN;AACA,UAAMI,iBAAiB,GAAGT,QAAQ,CAACU,KAAT,CAAe,GAAf,EAAoBC,IAApB,CAAyB,EAAzB,CAA1B;AACD,UAAMC,iBAAiB,GAAGH,iBAAiB,CAACI,WAAlB,EAA1B;;AACC,QAAID,iBAAiB,KAAK,UAA1B,EAAsC;AACpCf,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,KAFD,MAEOiB,KAAK,CAAC,gBAAD,CAAL;AACR;;AACD,MAAI,CAAClB,KAAL,EAAY;AACV,wBACE,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACA,QAAC,YAAD,CAAc,QAAd;AAAuB,UAAA,KAAK,EAAE;AAACE,YAAAA,KAAD;AAAQC,YAAAA;AAAR,WAA9B;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAC,GADP;AAEE,YAAA,OAAO,eACL,QAAC,KAAD;AACE,cAAA,SAAS,EAAC,OADZ;AAEE,cAAA,KAAK,EAAEC,QAFT;AAGE,cAAA,OAAO,EAAEQ,SAHX;AAIE,cAAA,QAAQ,EAAEN;AAJZ;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,kBADF,eAWS,QAAC,KAAD;AACL,YAAA,IAAI,EAAC,SADA;AAEL,YAAA,OAAO,eACL,QAAC,MAAD;AACE,cAAA,SAAS,EAAC;AADZ;AAAA;AAAA;AAAA;AAAA;AAHG;AAAA;AAAA;AAAA;AAAA,kBAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD,GA5BD,MA4BO;AACL,wBACE,QAAC,aAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AASD;AACF;;GAxDQP,G;;KAAAA,G;AAyDT,eAAeA,GAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"./compon/Login\";\r\nimport Posts from \"./compon/Posts\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport SignUp from \"./compon/SignUp\";\r\nimport { LoginContext } from \"./compon/LoginContexts\";\r\n\r\nfunction App() {\r\n  const [token, setToken] = useState(false);\r\n  const [login, setLogin] = useContext(LoginContext);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  function updatePassword(props, event) {\r\n    event.stopPropagation();\r\n    setPassword(event.target.value);\r\n  }\r\n  function LoginFunc(props, event) {\r\n    event.stopPropagation();\r\n    const removeWhiteSpaces = password.split(' ').join('');\r\n   const lowerCasePassword = removeWhiteSpaces.toLowerCase();\r\n    if (lowerCasePassword === \"test1234\") {\r\n      setToken(true);\r\n    } else alert(\"wrong password\");\r\n  }\r\n  if (!token) {\r\n    return (\r\n      <BrowserRouter>\r\n        <Routes>\r\n        <LoginContext.Provider value={{login, setLogin}} >\r\n          <Route\r\n            path=\"/\"\r\n            element={\r\n              <Login\r\n                className=\"input\"\r\n                value={password}\r\n                onClick={LoginFunc}\r\n                onChange={updatePassword} />\r\n            }\r\n            />\r\n                 <Route\r\n            path=\"/signup\"\r\n            element={\r\n              <SignUp\r\n                className=\"signUp\"\r\n                />\r\n            }\r\n            />\r\n      \r\n      </LoginContext.Provider>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    );\r\n  } else {\r\n    return (\r\n      <BrowserRouter>\r\n        <Routes>\r\n  \r\n          <Route path=\"/\" element={<Posts />} />\r\n        \r\n        </Routes>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}